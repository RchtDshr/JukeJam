
services:

  postgres:
    image: postgres:14
    container_name: pg_jukejam
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: jukejam
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d jukejam"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis_stack_jukejam
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis_data:/data
    restart: always

  backend:
    build: ./backend
    container_name: node_jukejam
    depends_on:
      postgres:
        condition: service_healthy
      redis-stack:
        condition: service_started
    environment:
      PG_HOST: postgres
      PG_USER: postgres
      PG_PASSWORD: password
      PG_DB: jukejam
      PG_PORT: 5432
      REDIS_HOST: redis-stack
      REDIS_PORT: 6379
      REDIS_URL: redis://redis-stack:6379
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    ports:
      - "3000:3000"
      - "4000:4000"
    volumes:
      - ./backend:/backend
      - /backend/node_modules
    restart: always

  frontend:
    build:
      context: ./frontend
    container_name: react_jukejam
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules  # this avoids node_modules overwriting with host empty folder
    ports:
      - "5173:5173"
    depends_on:
      - backend
    restart: always

volumes:
  pg_data:
  redis_data:
